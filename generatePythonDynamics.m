version = "0.1";

p = auvParamsAlbatross();
[A, B, G] = EoM_Collect_Enu(@EoM_6DoF, p);

% Get code for symbolic matrices:
A_code_raw = ccode(A);
B_code_raw = ccode(B);
G_code_raw = ccode(G);

% Convert code to cell arrays:
A_code_cell = strsplit(A_code_raw, '\n');
B_code_cell = strsplit(B_code_raw, '\n');
G_code_cell = strsplit(G_code_raw, '\n');

% Format each line of code properly:
A_code_cell = cellfun(@(x) "    " + x(3:end-1) + newline, A_code_cell, 'UniformOutput', false);
B_code_cell = cellfun(@(x) "    " + x(3:end-1) + newline, B_code_cell, 'UniformOutput', false);
G_code_cell = cellfun(@(x) "    " + x(3:end-1) + newline, G_code_cell, 'UniformOutput', false);

% Get useful information:

defaultpath = '.';
if isfile('lastpath.mat')
    load('lastpath.mat', 'path')
    if exist(path, 'dir')
        defaultpath = path;
    end
end

fprintf("Starting autogenerator...\n");
fprintf("Please provide output file:\n");
[file, path] = uiputfile(defaultpath + "*.py",'Select output file to write');
save('lastpath.mat', 'path')
name = input('Enter full name: ', 's');
input('Please verify that this repository is pushed to git and up to date. Press enter to continue...')
gi = getGitInfo();
sha = gi.hash;
date = datestr(datetime('now'));

% Print params:
fprintf("\n---------------\nUsing the following information:\n\n");
fprintf("Name: %s\n", name);
fprintf("Git sha detected: %s\n", gi.hash);
fprintf("Date and time: %s\n", date);
fprintf("Script version: %s\n", version)
fprintf("For vehicle: %s\n", p.vehicle_name);
fprintf("Output file: %s\n", file)
fprintf("Output path: %s\n", path)

% Create python file:
codeStr = fileread("python_template.py");

codeStr = sprintf(codeStr, ...
    date, ...
    name, ...
    sha, ...
    version, ...
    p.vehicle_name, ...
    p.m, ...
    p.b, ...
    p.r_G(1), ...
    p.r_G(2), ...
    p.r_G(3), ...
    p.r_B(1), ...
    p.r_B(2), ...
    p.r_B(3), ...
    p.Ixx, ...
    p.Iyy, ...
    p.Izz, ...
    p.Ixy, ...
    p.Ixz, ...
    p.Iyz, ...
    p.D_x, ...
    p.D_y, ...
    p.D_z, ...
    p.D_roll, ...
    p.D_pitch, ...
    p.D_yaw, ...
    p.D2_x, ...
    p.D2_y, ...
    p.D2_z, ...
    p.D2_roll, ...
    p.D2_pitch, ...
    p.D2_yaw, ...
    p.Ma_x, ...
    p.Ma_y, ...
    p.Ma_z, ...
    p.Ma_roll, ...
    p.Ma_pitch, ...
    p.Ma_yaw, ...
    strcat(A_code_cell{:}), ...
    strcat(B_code_cell{:}), ...
    strcat(G_code_cell{:}) ...
    );

f = fullfile(path, file);
fID = fopen(f, 'w');
fprintf(fID, "%s", codeStr);
fprintf("Done! Output to: %s\n", f);